{"remainingRequest":"/home/onur/radicle-run/radicle/node_modules/babel-loader/lib/index.js??ref--4-1!/home/onur/radicle-run/radicle/node_modules/@docusaurus/theme-classic/src/theme/CodeBlock/index.js","dependencies":[{"path":"/home/onur/radicle-run/radicle/node_modules/@docusaurus/theme-classic/src/theme/CodeBlock/index.js","mtime":1584000044727},{"path":"/home/onur/radicle-run/radicle/node_modules/cache-loader/dist/cjs.js","mtime":1584000034949},{"path":"/home/onur/radicle-run/radicle/node_modules/babel-loader/lib/index.js","mtime":1584000034867}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL2hvbWUvb251ci9yYWRpY2xlLXJ1bi9yYWRpY2xlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzIjsvKioKICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuCiAqCiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZQogKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuCiAqL2ltcG9ydCBSZWFjdCx7dXNlRWZmZWN0LHVzZVN0YXRlLHVzZVJlZn1mcm9tJ3JlYWN0JztpbXBvcnQgY2xhc3NuYW1lcyBmcm9tJ2NsYXNzbmFtZXMnO2ltcG9ydCBIaWdobGlnaHQse2RlZmF1bHRQcm9wc31mcm9tJ3ByaXNtLXJlYWN0LXJlbmRlcmVyJztpbXBvcnQgZGVmYXVsdFRoZW1lIGZyb20ncHJpc20tcmVhY3QtcmVuZGVyZXIvdGhlbWVzL3BhbGVuaWdodCc7aW1wb3J0IENsaXBib2FyZCBmcm9tJ2NsaXBib2FyZCc7aW1wb3J0IHJhbmdlUGFyc2VyIGZyb20ncGFyc2UtbnVtZXJpYy1yYW5nZSc7aW1wb3J0IHVzZURvY3VzYXVydXNDb250ZXh0IGZyb20nQGRvY3VzYXVydXMvdXNlRG9jdXNhdXJ1c0NvbnRleHQnO2ltcG9ydCB1c2VUaGVtZUNvbnRleHQgZnJvbSdAdGhlbWUvaG9va3MvdXNlVGhlbWVDb250ZXh0JztpbXBvcnQgc3R5bGVzIGZyb20nLi9zdHlsZXMubW9kdWxlLmNzcyc7Y29uc3QgaGlnaGxpZ2h0TGluZXNSYW5nZVJlZ2V4PS97KFtcZCwtXSspfS87ZXhwb3J0IGRlZmF1bHQoKHtjaGlsZHJlbixjbGFzc05hbWU6bGFuZ3VhZ2VDbGFzc05hbWUsbWV0YXN0cmluZ30pPT57Y29uc3R7c2l0ZUNvbmZpZzp7dGhlbWVDb25maWc6e3ByaXNtPXt9fX19PXVzZURvY3VzYXVydXNDb250ZXh0KCk7Y29uc3Rbc2hvd0NvcGllZCxzZXRTaG93Q29waWVkXT11c2VTdGF0ZShmYWxzZSk7Y29uc3RbbW91bnRlZCxzZXRNb3VudGVkXT11c2VTdGF0ZShmYWxzZSk7Ly8gVGhlIFByaXNtIHRoZW1lIG9uIFNTUiBpcyBhbHdheXMgdGhlIGRlZmF1bHQgdGhlbWUgYnV0IHRoZSBzaXRlIHRoZW1lCi8vIGNhbiBiZSBpbiBhIGRpZmZlcmVudCBtb2RlLiBSZWFjdCBoeWRyYXRpb24gZG9lc24ndCB1cGRhdGUgRE9NIHN0eWxlcwovLyB0aGF0IGNvbWUgZnJvbSBTU1IuIEhlbmNlIGZvcmNlIGEgcmUtcmVuZGVyIGFmdGVyIG1vdW50aW5nIHRvIGFwcGx5IHRoZQovLyBjdXJyZW50IHJlbGV2YW50IHN0eWxlcy4gVGhlcmUgd2lsbCBiZSBhIGZsYXNoIHNlZW4gb2YgdGhlIG9yaWdpbmFsCi8vIHN0eWxlcyBzZWVuIHVzaW5nIHRoaXMgY3VycmVudCBhcHByb2FjaCBidXQgdGhhdCdzIHByb2JhYmx5IG9rLiBGaXhpbmcKLy8gdGhlIGZsYXNoIHdpbGwgcmVxdWlyZSBjaGFuZ2luZyB0aGUgdGhlbWluZyBhcHByb2FjaCBhbmQgaXMgbm90IHdvcnRoIGl0Ci8vIGF0IHRoaXMgcG9pbnQuCnVzZUVmZmVjdCgoKT0+e3NldE1vdW50ZWQodHJ1ZSk7fSxbXSk7Y29uc3QgdGFyZ2V0PXVzZVJlZihudWxsKTtjb25zdCBidXR0b249dXNlUmVmKG51bGwpO2xldCBoaWdobGlnaHRMaW5lcz1bXTtjb25zdHtpc0RhcmtUaGVtZX09dXNlVGhlbWVDb250ZXh0KCk7Y29uc3QgbGlnaHRNb2RlVGhlbWU9cHJpc20udGhlbWV8fGRlZmF1bHRUaGVtZTtjb25zdCBkYXJrTW9kZVRoZW1lPXByaXNtLmRhcmtUaGVtZXx8bGlnaHRNb2RlVGhlbWU7Y29uc3QgcHJpc21UaGVtZT1pc0RhcmtUaGVtZT9kYXJrTW9kZVRoZW1lOmxpZ2h0TW9kZVRoZW1lO2lmKG1ldGFzdHJpbmcmJmhpZ2hsaWdodExpbmVzUmFuZ2VSZWdleC50ZXN0KG1ldGFzdHJpbmcpKXtjb25zdCBoaWdobGlnaHRMaW5lc1JhbmdlPW1ldGFzdHJpbmcubWF0Y2goaGlnaGxpZ2h0TGluZXNSYW5nZVJlZ2V4KVsxXTtoaWdobGlnaHRMaW5lcz1yYW5nZVBhcnNlci5wYXJzZShoaWdobGlnaHRMaW5lc1JhbmdlKS5maWx0ZXIobj0+bj4wKTt9dXNlRWZmZWN0KCgpPT57bGV0IGNsaXBib2FyZDtpZihidXR0b24uY3VycmVudCl7Y2xpcGJvYXJkPW5ldyBDbGlwYm9hcmQoYnV0dG9uLmN1cnJlbnQse3RhcmdldDooKT0+dGFyZ2V0LmN1cnJlbnR9KTt9cmV0dXJuKCk9PntpZihjbGlwYm9hcmQpe2NsaXBib2FyZC5kZXN0cm95KCk7fX07fSxbYnV0dG9uLmN1cnJlbnQsdGFyZ2V0LmN1cnJlbnRdKTtsZXQgbGFuZ3VhZ2U9bGFuZ3VhZ2VDbGFzc05hbWUmJmxhbmd1YWdlQ2xhc3NOYW1lLnJlcGxhY2UoL2xhbmd1YWdlLS8sJycpO2lmKCFsYW5ndWFnZSYmcHJpc20uZGVmYXVsdExhbmd1YWdlKXtsYW5ndWFnZT1wcmlzbS5kZWZhdWx0TGFuZ3VhZ2U7fWNvbnN0IGhhbmRsZUNvcHlDb2RlPSgpPT57d2luZG93LmdldFNlbGVjdGlvbigpLmVtcHR5KCk7c2V0U2hvd0NvcGllZCh0cnVlKTtzZXRUaW1lb3V0KCgpPT5zZXRTaG93Q29waWVkKGZhbHNlKSwyMDAwKTt9O3JldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KEhpZ2hsaWdodCxfZXh0ZW5kcyh7fSxkZWZhdWx0UHJvcHMse2tleTptb3VudGVkLHRoZW1lOnByaXNtVGhlbWUsY29kZTpjaGlsZHJlbi5yZXBsYWNlKC9cbiQvLCcnKSxsYW5ndWFnZTpsYW5ndWFnZX0pLCh7Y2xhc3NOYW1lLHN0eWxlLHRva2VucyxnZXRMaW5lUHJvcHMsZ2V0VG9rZW5Qcm9wc30pPT5SZWFjdC5jcmVhdGVFbGVtZW50KCJwcmUiLHtjbGFzc05hbWU6Y2xhc3NuYW1lcyhjbGFzc05hbWUsc3R5bGVzLmNvZGVCbG9jayl9LFJlYWN0LmNyZWF0ZUVsZW1lbnQoImJ1dHRvbiIse3JlZjpidXR0b24sdHlwZToiYnV0dG9uIiwiYXJpYS1sYWJlbCI6IkNvcHkgY29kZSB0byBjbGlwYm9hcmQiLGNsYXNzTmFtZTpzdHlsZXMuY29weUJ1dHRvbixvbkNsaWNrOmhhbmRsZUNvcHlDb2RlfSxzaG93Q29waWVkPydDb3BpZWQnOidDb3B5JyksUmVhY3QuY3JlYXRlRWxlbWVudCgiY29kZSIse3JlZjp0YXJnZXQsY2xhc3NOYW1lOnN0eWxlcy5jb2RlQmxvY2tMaW5lcyxzdHlsZTpzdHlsZX0sdG9rZW5zLm1hcCgobGluZSxpKT0+e2lmKGxpbmUubGVuZ3RoPT09MSYmbGluZVswXS5jb250ZW50PT09Jycpe2xpbmVbMF0uY29udGVudD0nXG4nOy8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tcGFyYW0tcmVhc3NpZ24KfWNvbnN0IGxpbmVQcm9wcz1nZXRMaW5lUHJvcHMoe2xpbmUsa2V5Oml9KTtpZihoaWdobGlnaHRMaW5lcy5pbmNsdWRlcyhpKzEpKXtsaW5lUHJvcHMuY2xhc3NOYW1lPWAke2xpbmVQcm9wcy5jbGFzc05hbWV9IGRvY3VzYXVydXMtaGlnaGxpZ2h0LWNvZGUtbGluZWA7fXJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLF9leHRlbmRzKHtrZXk6aX0sbGluZVByb3BzKSxsaW5lLm1hcCgodG9rZW4sa2V5KT0+UmVhY3QuY3JlYXRlRWxlbWVudCgic3BhbiIsX2V4dGVuZHMoe2tleTprZXl9LGdldFRva2VuUHJvcHMoe3Rva2VuLGtleX0pKSkpKTt9KSkpKTt9KTs="},{"version":3,"sources":["/home/onur/radicle-run/radicle/node_modules/@docusaurus/theme-classic/src/theme/CodeBlock/index.js"],"names":["React","useEffect","useState","useRef","classnames","Highlight","defaultProps","defaultTheme","Clipboard","rangeParser","useDocusaurusContext","useThemeContext","styles","highlightLinesRangeRegex","children","className","languageClassName","metastring","siteConfig","themeConfig","prism","showCopied","setShowCopied","mounted","setMounted","target","button","highlightLines","isDarkTheme","lightModeTheme","theme","darkModeTheme","darkTheme","prismTheme","test","highlightLinesRange","match","parse","filter","n","clipboard","current","destroy","language","replace","defaultLanguage","handleCopyCode","window","getSelection","empty","setTimeout","style","tokens","getLineProps","getTokenProps","codeBlock","copyButton","codeBlockLines","map","line","i","length","content","lineProps","key","includes","token"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, {useEffect, useState, useRef} from 'react';\nimport classnames from 'classnames';\nimport Highlight, {defaultProps} from 'prism-react-renderer';\nimport defaultTheme from 'prism-react-renderer/themes/palenight';\nimport Clipboard from 'clipboard';\nimport rangeParser from 'parse-numeric-range';\nimport useDocusaurusContext from '@docusaurus/useDocusaurusContext';\nimport useThemeContext from '@theme/hooks/useThemeContext';\n\nimport styles from './styles.module.css';\n\nconst highlightLinesRangeRegex = /{([\\d,-]+)}/;\n\nexport default ({children, className: languageClassName, metastring}) => {\n  const {\n    siteConfig: {\n      themeConfig: {prism = {}},\n    },\n  } = useDocusaurusContext();\n\n  const [showCopied, setShowCopied] = useState(false);\n  const [mounted, setMounted] = useState(false);\n  // The Prism theme on SSR is always the default theme but the site theme\n  // can be in a different mode. React hydration doesn't update DOM styles\n  // that come from SSR. Hence force a re-render after mounting to apply the\n  // current relevant styles. There will be a flash seen of the original\n  // styles seen using this current approach but that's probably ok. Fixing\n  // the flash will require changing the theming approach and is not worth it\n  // at this point.\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  const target = useRef(null);\n  const button = useRef(null);\n  let highlightLines = [];\n\n  const {isDarkTheme} = useThemeContext();\n  const lightModeTheme = prism.theme || defaultTheme;\n  const darkModeTheme = prism.darkTheme || lightModeTheme;\n  const prismTheme = isDarkTheme ? darkModeTheme : lightModeTheme;\n\n  if (metastring && highlightLinesRangeRegex.test(metastring)) {\n    const highlightLinesRange = metastring.match(highlightLinesRangeRegex)[1];\n    highlightLines = rangeParser.parse(highlightLinesRange).filter(n => n > 0);\n  }\n\n  useEffect(() => {\n    let clipboard;\n\n    if (button.current) {\n      clipboard = new Clipboard(button.current, {\n        target: () => target.current,\n      });\n    }\n\n    return () => {\n      if (clipboard) {\n        clipboard.destroy();\n      }\n    };\n  }, [button.current, target.current]);\n\n  let language =\n    languageClassName && languageClassName.replace(/language-/, '');\n\n  if (!language && prism.defaultLanguage) {\n    language = prism.defaultLanguage;\n  }\n\n  const handleCopyCode = () => {\n    window.getSelection().empty();\n    setShowCopied(true);\n\n    setTimeout(() => setShowCopied(false), 2000);\n  };\n\n  return (\n    <Highlight\n      {...defaultProps}\n      key={mounted}\n      theme={prismTheme}\n      code={children.replace(/\\n$/, '')}\n      language={language}>\n      {({className, style, tokens, getLineProps, getTokenProps}) => (\n        <pre className={classnames(className, styles.codeBlock)}>\n          <button\n            ref={button}\n            type=\"button\"\n            aria-label=\"Copy code to clipboard\"\n            className={styles.copyButton}\n            onClick={handleCopyCode}>\n            {showCopied ? 'Copied' : 'Copy'}\n          </button>\n\n          <code ref={target} className={styles.codeBlockLines} style={style}>\n            {tokens.map((line, i) => {\n              if (line.length === 1 && line[0].content === '') {\n                line[0].content = '\\n'; // eslint-disable-line no-param-reassign\n              }\n\n              const lineProps = getLineProps({line, key: i});\n\n              if (highlightLines.includes(i + 1)) {\n                lineProps.className = `${lineProps.className} docusaurus-highlight-code-line`;\n              }\n\n              return (\n                <div key={i} {...lineProps}>\n                  {line.map((token, key) => (\n                    <span key={key} {...getTokenProps({token, key})} />\n                  ))}\n                </div>\n              );\n            })}\n          </code>\n        </pre>\n      )}\n    </Highlight>\n  );\n};\n"]}]}