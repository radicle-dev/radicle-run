{"remainingRequest":"/home/onur/radicle-run/radicle/node_modules/babel-loader/lib/index.js??ref--4-1!/home/onur/radicle-run/radicle/node_modules/@docusaurus/theme-classic/src/theme/BlogTagsPostsPage/index.js","dependencies":[{"path":"/home/onur/radicle-run/radicle/node_modules/@docusaurus/theme-classic/src/theme/BlogTagsPostsPage/index.js","mtime":1584000044727},{"path":"/home/onur/radicle-run/radicle/node_modules/cache-loader/dist/cjs.js","mtime":1584000034949},{"path":"/home/onur/radicle-run/radicle/node_modules/babel-loader/lib/index.js","mtime":1584000034867}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoqCiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLgogKgogKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGUKICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLgogKi9pbXBvcnQgUmVhY3QgZnJvbSdyZWFjdCc7aW1wb3J0IExheW91dCBmcm9tJ0B0aGVtZS9MYXlvdXQnO2ltcG9ydCBCbG9nUG9zdEl0ZW0gZnJvbSdAdGhlbWUvQmxvZ1Bvc3RJdGVtJztpbXBvcnQgTGluayBmcm9tJ0Bkb2N1c2F1cnVzL0xpbmsnO2Z1bmN0aW9uIHBsdXJhbGl6ZShjb3VudCx3b3JkKXtyZXR1cm4gY291bnQ+MT9gJHt3b3JkfXNgOndvcmQ7fWZ1bmN0aW9uIEJsb2dUYWdzUG9zdFBhZ2UocHJvcHMpe2NvbnN0e21ldGFkYXRhLGl0ZW1zfT1wcm9wcztjb25zdHthbGxUYWdzUGF0aCxuYW1lOnRhZ05hbWUsY291bnR9PW1ldGFkYXRhO3JldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KExheW91dCx7dGl0bGU6YFBvc3RzIHRhZ2dlZCAiJHt0YWdOYW1lfSJgLGRlc2NyaXB0aW9uOmBCbG9nIHwgVGFnZ2VkICIke3RhZ05hbWV9ImB9LFJlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIse2NsYXNzTmFtZToiY29udGFpbmVyIG1hcmdpbi12ZXJ0LS14bCJ9LFJlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIse2NsYXNzTmFtZToicm93In0sUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2Iix7Y2xhc3NOYW1lOiJjb2wgY29sLS04IGNvbC0tb2Zmc2V0LTIifSxSZWFjdC5jcmVhdGVFbGVtZW50KCJoMSIsbnVsbCxjb3VudCwiICIscGx1cmFsaXplKGNvdW50LCdwb3N0JyksIiB0YWdnZWQgd2l0aCBcIiIsdGFnTmFtZSwiXCIiKSxSZWFjdC5jcmVhdGVFbGVtZW50KExpbmsse2hyZWY6YWxsVGFnc1BhdGh9LCJWaWV3IEFsbCBUYWdzIiksUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2Iix7Y2xhc3NOYW1lOiJtYXJnaW4tdmVydC0teGwifSxpdGVtcy5tYXAoKHtjb250ZW50OkJsb2dQb3N0Q29udGVudH0pPT5SZWFjdC5jcmVhdGVFbGVtZW50KEJsb2dQb3N0SXRlbSx7a2V5OkJsb2dQb3N0Q29udGVudC5tZXRhZGF0YS5wZXJtYWxpbmssZnJvbnRNYXR0ZXI6QmxvZ1Bvc3RDb250ZW50LmZyb250TWF0dGVyLG1ldGFkYXRhOkJsb2dQb3N0Q29udGVudC5tZXRhZGF0YSx0cnVuY2F0ZWQ6dHJ1ZX0sUmVhY3QuY3JlYXRlRWxlbWVudChCbG9nUG9zdENvbnRlbnQsbnVsbCkpKSkpKSkpO31leHBvcnQgZGVmYXVsdCBCbG9nVGFnc1Bvc3RQYWdlOw=="},{"version":3,"sources":["/home/onur/radicle-run/radicle/node_modules/@docusaurus/theme-classic/src/theme/BlogTagsPostsPage/index.js"],"names":["React","Layout","BlogPostItem","Link","pluralize","count","word","BlogTagsPostPage","props","metadata","items","allTagsPath","name","tagName","map","content","BlogPostContent","permalink","frontMatter"],"mappings":"AAAA;;;;;GAOA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,MAAP,KAAmB,eAAnB,CACA,MAAOC,CAAAA,YAAP,KAAyB,qBAAzB,CACA,MAAOC,CAAAA,IAAP,KAAiB,kBAAjB,CAEA,QAASC,CAAAA,SAAT,CAAmBC,KAAnB,CAA0BC,IAA1B,CAAgC,CAC9B,MAAOD,CAAAA,KAAK,CAAG,CAAR,CAAa,GAAEC,IAAK,GAApB,CAAyBA,IAAhC,CACD,CAED,QAASC,CAAAA,gBAAT,CAA0BC,KAA1B,CAAiC,CAC/B,KAAM,CAACC,QAAD,CAAWC,KAAX,EAAoBF,KAA1B,CACA,KAAM,CAACG,WAAD,CAAcC,IAAI,CAAEC,OAApB,CAA6BR,KAA7B,EAAsCI,QAA5C,CAEA,MACE,qBAAC,MAAD,EACE,KAAK,CAAG,iBAAgBI,OAAQ,GADlC,CAEE,WAAW,CAAG,kBAAiBA,OAAQ,GAFzC,EAGE,2BAAK,SAAS,CAAC,2BAAf,EACE,2BAAK,SAAS,CAAC,KAAf,EACE,2BAAK,SAAS,CAAC,0BAAf,EACE,8BACGR,KADH,KACWD,SAAS,CAACC,KAAD,CAAQ,MAAR,CADpB,mBACwDQ,OADxD,MADF,CAKE,oBAAC,IAAD,EAAM,IAAI,CAAEF,WAAZ,kBALF,CAME,2BAAK,SAAS,CAAC,iBAAf,EACGD,KAAK,CAACI,GAAN,CAAU,CAAC,CAACC,OAAO,CAAEC,eAAV,CAAD,GACT,oBAAC,YAAD,EACE,GAAG,CAAEA,eAAe,CAACP,QAAhB,CAAyBQ,SADhC,CAEE,WAAW,CAAED,eAAe,CAACE,WAF/B,CAGE,QAAQ,CAAEF,eAAe,CAACP,QAH5B,CAIE,SAAS,KAJX,EAKE,oBAAC,eAAD,MALF,CADD,CADH,CANF,CADF,CADF,CAHF,CADF,CA4BD,CAED,cAAeF,CAAAA,gBAAf","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\n\nimport Layout from '@theme/Layout';\nimport BlogPostItem from '@theme/BlogPostItem';\nimport Link from '@docusaurus/Link';\n\nfunction pluralize(count, word) {\n  return count > 1 ? `${word}s` : word;\n}\n\nfunction BlogTagsPostPage(props) {\n  const {metadata, items} = props;\n  const {allTagsPath, name: tagName, count} = metadata;\n\n  return (\n    <Layout\n      title={`Posts tagged \"${tagName}\"`}\n      description={`Blog | Tagged \"${tagName}\"`}>\n      <div className=\"container margin-vert--xl\">\n        <div className=\"row\">\n          <div className=\"col col--8 col--offset-2\">\n            <h1>\n              {count} {pluralize(count, 'post')} tagged with &quot;{tagName}\n              &quot;\n            </h1>\n            <Link href={allTagsPath}>View All Tags</Link>\n            <div className=\"margin-vert--xl\">\n              {items.map(({content: BlogPostContent}) => (\n                <BlogPostItem\n                  key={BlogPostContent.metadata.permalink}\n                  frontMatter={BlogPostContent.frontMatter}\n                  metadata={BlogPostContent.metadata}\n                  truncated>\n                  <BlogPostContent />\n                </BlogPostItem>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default BlogTagsPostPage;\n"]}]}